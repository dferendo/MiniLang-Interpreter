<Program>
	<FunctionDeclaration type="int">
		<Identifier>max</Identifier>
		<FormalParams>
			<FormalParam type="int">
				<Identifier>x</Identifier>
			</FormalParam>
			<FormalParam type="int">
				<Identifier>y</Identifier>
			</FormalParam>
		</FormalParams>
		<Block>
			<IfStatement>
			<BinaryExprNode op="&gt;">
				<Identifier>x</Identifier>
				<Identifier>y</Identifier>
			</BinaryExprNode>
				<Block>
					<ReturnStatement>
						<Expression>
							<Identifier>x</Identifier>
						</Expression>
					</ReturnStatement>
				</Block>
			</IfStatement>
			<ReturnStatement>
				<Expression>
					<Identifier>y</Identifier>
				</Expression>
			</ReturnStatement>
		</Block>
	</FunctionDeclaration>
	<FunctionDeclaration type="int">
		<Identifier>min</Identifier>
		<FormalParams>
			<FormalParam type="int">
				<Identifier>x</Identifier>
			</FormalParam>
			<FormalParam type="int">
				<Identifier>y</Identifier>
			</FormalParam>
		</FormalParams>
		<Block>
			<FunctionDeclaration type="int">
				<Identifier>minHelper</Identifier>
				<FormalParams>
					<FormalParam type="int">
						<Identifier>x</Identifier>
					</FormalParam>
					<FormalParam type="int">
						<Identifier>y</Identifier>
					</FormalParam>
				</FormalParams>
				<Block>
					<IfStatement>
					<BinaryExprNode op="&lt;">
						<Identifier>x</Identifier>
						<Identifier>y</Identifier>
					</BinaryExprNode>
						<Block>
							<ReturnStatement>
								<Expression>
									<Identifier>x</Identifier>
								</Expression>
							</ReturnStatement>
						</Block>
					</IfStatement>
					<ReturnStatement>
						<Expression>
							<Identifier>y</Identifier>
						</Expression>
					</ReturnStatement>
				</Block>
			</FunctionDeclaration>
			<IfStatement>
			<BinaryExprNode op="==">
				<Identifier>x</Identifier>
				<FunctionCall>
					<Identifier>minHelper</Identifier>
					<ActualParams>
						<Identifier>x</Identifier>
						<Identifier>y</Identifier>
					</ActualParams>
				</FunctionCall>
			</BinaryExprNode>
				<Block>
					<ReturnStatement>
						<Expression>
							<Identifier>x</Identifier>
						</Expression>
					</ReturnStatement>
				</Block>
			</IfStatement>
			<ReturnStatement>
				<Expression>
					<Identifier>y</Identifier>
				</Expression>
			</ReturnStatement>
		</Block>
	</FunctionDeclaration>
	<VariableDeclaration type="int">
		<Identifier>x</Identifier>
		<Expression>
			<Integer>20</Integer>
		</Expression>
	</VariableDeclaration>
	<VariableDeclaration type="int">
		<Identifier>y</Identifier>
		<Expression>
			<Integer>30</Integer>
		</Expression>
	</VariableDeclaration>
	<PrintStatement>
		<Expression>
			<FunctionCall>
				<Identifier>min</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
		</Expression>
	</PrintStatement>
	<PrintStatement>
		<Expression>
			<FunctionCall>
				<Identifier>max</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
		</Expression>
	</PrintStatement>
	<PrintStatement>
		<BinaryExprNode op="&lt;">
			<FunctionCall>
				<Identifier>min</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
			<FunctionCall>
				<Identifier>max</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
		</BinaryExprNode>
	</PrintStatement>
	<FunctionDeclaration type="int">
		<Identifier>max</Identifier>
		<FormalParams>
			<FormalParam type="int">
				<Identifier>x</Identifier>
			</FormalParam>
			<FormalParam type="int">
				<Identifier>y</Identifier>
			</FormalParam>
		</FormalParams>
		<Block>
			<IfStatement>
			<BinaryExprNode op="&gt;">
				<Identifier>x</Identifier>
				<Identifier>y</Identifier>
			</BinaryExprNode>
				<Block>
					<ReturnStatement>
						<Expression>
							<Identifier>x</Identifier>
						</Expression>
					</ReturnStatement>
				</Block>
			</IfStatement>
			<ReturnStatement>
				<Expression>
					<Identifier>y</Identifier>
				</Expression>
			</ReturnStatement>
		</Block>
	</FunctionDeclaration>
	<FunctionDeclaration type="int">
		<Identifier>min</Identifier>
		<FormalParams>
			<FormalParam type="int">
				<Identifier>x</Identifier>
			</FormalParam>
			<FormalParam type="int">
				<Identifier>y</Identifier>
			</FormalParam>
		</FormalParams>
		<Block>
			<FunctionDeclaration type="int">
				<Identifier>minHelper</Identifier>
				<FormalParams>
					<FormalParam type="int">
						<Identifier>x</Identifier>
					</FormalParam>
					<FormalParam type="int">
						<Identifier>y</Identifier>
					</FormalParam>
				</FormalParams>
				<Block>
					<IfStatement>
					<BinaryExprNode op="&lt;">
						<Identifier>x</Identifier>
						<Identifier>y</Identifier>
					</BinaryExprNode>
						<Block>
							<ReturnStatement>
								<Expression>
									<Identifier>x</Identifier>
								</Expression>
							</ReturnStatement>
						</Block>
					</IfStatement>
					<ReturnStatement>
						<Expression>
							<Identifier>y</Identifier>
						</Expression>
					</ReturnStatement>
				</Block>
			</FunctionDeclaration>
			<IfStatement>
			<BinaryExprNode op="==">
				<Identifier>x</Identifier>
				<FunctionCall>
					<Identifier>minHelper</Identifier>
					<ActualParams>
						<Identifier>x</Identifier>
						<Identifier>y</Identifier>
					</ActualParams>
				</FunctionCall>
			</BinaryExprNode>
				<Block>
					<ReturnStatement>
						<Expression>
							<Identifier>x</Identifier>
						</Expression>
					</ReturnStatement>
				</Block>
			</IfStatement>
			<ReturnStatement>
				<Expression>
					<Identifier>y</Identifier>
				</Expression>
			</ReturnStatement>
		</Block>
	</FunctionDeclaration>
	<VariableDeclaration type="int">
		<Identifier>x</Identifier>
		<Expression>
			<Integer>20</Integer>
		</Expression>
	</VariableDeclaration>
	<VariableDeclaration type="int">
		<Identifier>y</Identifier>
		<Expression>
			<Integer>30</Integer>
		</Expression>
	</VariableDeclaration>
	<PrintStatement>
		<Expression>
			<FunctionCall>
				<Identifier>min</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
		</Expression>
	</PrintStatement>
	<PrintStatement>
		<Expression>
			<FunctionCall>
				<Identifier>max</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
		</Expression>
	</PrintStatement>
	<PrintStatement>
		<BinaryExprNode op="&lt;">
			<FunctionCall>
				<Identifier>min</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
			<FunctionCall>
				<Identifier>max</Identifier>
				<ActualParams>
					<Identifier>x</Identifier>
					<Identifier>y</Identifier>
				</ActualParams>
			</FunctionCall>
		</BinaryExprNode>
	</PrintStatement>
</Program>

